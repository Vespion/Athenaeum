// <auto-generated />

#nullable enable
#pragma warning disable CS8618
#pragma warning disable CS8601
#pragma warning disable CS8603

using System.Collections.Generic;

using System.Text.Json;
using System.Text.Json.Serialization;

/// <summary>
/// Schema for a mutation testing report.
/// </summary>
public partial class MutationReport
{
    /// <summary>
    /// Free-format object that represents the configuration used to run mutation testing.
    /// </summary>
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [JsonPropertyName("config")]
    public Dictionary<string, object> Config { get; set; }

    /// <summary>
    /// All mutated files.
    /// </summary>
    [JsonPropertyName("files")]
    public Dictionary<string, FileResult> Files { get; set; }

    /// <summary>
    /// Extra information about the framework used
    /// </summary>
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [JsonPropertyName("framework")]
    public FrameworkInformation Framework { get; set; }

    /// <summary>
    /// The performance statistics per phase. Total time should be roughly equal to the sum of
    /// all these.
    /// </summary>
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [JsonPropertyName("performance")]
    public PerformanceStatistics Performance { get; set; }

    /// <summary>
    /// The optional location of the project root.
    /// </summary>
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [JsonPropertyName("projectRoot")]
    public string ProjectRoot { get; set; }

    /// <summary>
    /// Major version of this report. Used for compatibility.
    /// </summary>
    [JsonPropertyName("schemaVersion")]
    public string SchemaVersion { get; set; }

    /// <summary>
    /// Information about the system that performed mutation testing.
    /// </summary>
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [JsonPropertyName("system")]
    public SystemInformation System { get; set; }

    /// <summary>
    /// Test file definitions by file path OR class name.
    /// </summary>
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [JsonPropertyName("testFiles")]
    public Dictionary<string, TestFile> TestFiles { get; set; }

    /// <summary>
    /// Thresholds for the status of the reported application.
    /// </summary>
    [JsonPropertyName("thresholds")]
    public Thresholds Thresholds { get; set; }
}

public partial class MutationReport
{
    public static MutationReport FromJson(string json) => JsonSerializer.Deserialize<MutationReport>(json, Converter.Settings);
}

#pragma warning restore CS8618
#pragma warning restore CS8601
#pragma warning restore CS8603
